name: $(date:yyyyMMdd)$(rev:.rr)-$(BuildID)

resources:
  repositories:
  - repository: self
    clean: true
  - repository: SdkBuildScripts
    clean: true
    name: SdkBuildScripts
    type: git
    ref: chwhitwo/azure-sphere-tools

trigger:
  branches:
    include:
    - main
    - release/*
    - chwhitwo/manufacturing-tools

stages:
- stage: Checks
  displayName: Checks
  dependsOn:
  
  jobs:
  - template: templates/yaml/azure-sphere-tools/check-yaml-definitions.yml@SdkBuildScripts

- stage: DotNetPackage
  displayName: Build and sign C# package
  dependsOn:
  jobs:
  - job: build_dotnet_pkg
    workspace:
      clean: all
    displayName: "Build .NET Package"
    variables:
      # Disable automatic Nuget Security Analysis injection so we can place the
      # nuget.config files in place and then manually run `task: nuget-security-analysis@0`
      skipNugetSecurityAnalysis: true 
    
    pool:
      name: AZS-1ES-W-MMS2022
    timeoutInMinutes: 30
    cancelTimeoutInMinutes: 10

    steps:
    - checkout: self

    - task: PowerShell@2
      displayName: "Enable internal nuget.config"
      inputs:
        pwsh: true
        targetType: inline
        script: |
          git mv $(Build.SourcesDirectory)\nuget.config.internal $(Build.SourcesDirectory)\nuget.config 

    - task: nuget-security-analysis@0
      displayName: "Secure Supply Chain Analysis (manual)"

    - task: UseDotNet@2
      displayName: "Install .NET Core SDK"
      inputs:
        version: 6.0.x
        performMultiLevelLookup: true

    - task: NuGetAuthenticate@1
    - task: NuGetToolInstaller@1

    - task: PowerShell@2
      displayName: "Run build script"
      inputs:
        pwsh: true
        filepath: "scripts/build-csharp.ps1"
